Category (e.g.: Electronics, Clothing, Kitchen)
-Name
-Total?
Item (e.g.: TV, Shirts, Pots and Pans)
-Name
-Value
-IsDeleted

Category has many Items


'rimraf' is not recognized as an internal or external command, operable program or batch file.
-npm install rimraf, in a new cmd window running as admin. For some reason `npm install rimraf` in the terminal in VSCode didn't resolve this.

'react-scripts' is not recognized as an internal or external command, operable program or batch file.
-run the `dotnet new react -o insurance-calc` command in a new cmd window running as admin. For some reason running the command in the terminal in VSCode works differently. At the time VSCode was not running as Admin, but didn't try that.

The type or namespace name 'DbContext' could not be found
-need to install Microsoft.EntityFrameworkCore
-in my case I had installed the Nuget Package Manager extension
-using the command palette nuget > EntityFrameworkCore, found latest stable version was 3.1.3 and selected it
-needed to restore once added

DbContextOptionsBuilder does not contain a definition for 'UseSqlServer'
-UseSqlServer is in Microsoft.EntityFrameworkCore.SqlServer, need to install that package
-in terminal dotnet add package Microsoft.EntityFrameworkCore.SqlServer
-build, references should now be resolved

We have a React app with ASP.NET Core and MVC and a localdb that gets initialized when we build
Now we need to start thinking in React Components

My first thought is to have a Grid component that shows Categories and their child Items
In React we could do this but we would have to ask each item for their value to calculate the total
Is it better React design for the Grid to know what items are in it, and then tell each row what to display?

TypeError: Cannot read property 'map' of undefined
-uhh, map is a method, not a property
-it's a bug!  Edge case where we have empty data which already happens when we initialize the react component
-when empty, the categories in categories.items.map is empty set, so there's no map and no items
-also this won't render because categories doesn't have items, categories.First() or categories[0] will render that category's items
-we should be able to nest maps https://stackoverflow.com/questions/47402365/how-to-have-nested-loops-with-map-in-jsx

Can't get Categories and Items to render with map without violating some HTML guidelines (can't nest <tr> in <tr>)
-try making a table with each category as a table
-check if we are permitted to nest tables in tables
-name and total as headers
-each item in a <tr>
